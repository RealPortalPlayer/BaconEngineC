<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="BaconEngine" targetName="BaconEditor" />
      <config projectName="BaconEngine" targetName="uninstall" />
      <config projectName="BaconEngine" targetName="glfw" />
      <config projectName="BaconEngine" targetName="CustomStandaloneClientBinary" />
      <config projectName="BaconEngine" targetName="StandaloneClientBinary" />
      <config projectName="BaconEngine" targetName="SharedEngineCode" />
      <config projectName="BaconEngine" targetName="TestClientCPP" />
      <config projectName="BaconEngine" targetName="BaconLauncher" />
      <config projectName="BaconEngine" targetName="BaconEngine" />
      <config projectName="BaconEngine" targetName="BaconEngineLauncher" />
      <config projectName="BaconEngine" targetName="BaconLauncherUI" />
      <config projectName="BaconEngine" targetName="glad" />
      <config projectName="BaconEngine" targetName="update_mappings" />
      <config projectName="BaconEngine" targetName="TestGame" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" GENERATION_DIR="build/native/debug" CONFIG_NAME="Debug" />
      <configuration PROFILE_NAME="Release" ENABLED="true" GENERATION_DIR="build/native/release" CONFIG_NAME="Release" />
      <configuration PROFILE_NAME="Debug-Win32" ENABLED="true" GENERATION_DIR="build/cross/win32/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Windows32-MinGW.cmake&quot;" />
      <configuration PROFILE_NAME="Release-Win32" ENABLED="true" GENERATION_DIR="build/cross/win32/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Windows32-MinGW.cmake&quot;" />
      <configuration PROFILE_NAME="Debug-Win64" ENABLED="true" GENERATION_DIR="build/cross/win64/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Windows64-MinGW.cmake&quot; -DBE_DISABLE_OPENGL=ON" />
      <configuration PROFILE_NAME="Release-Win64" ENABLED="true" GENERATION_DIR="build/cross/win64/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Windows64-MinGW.cmake&quot;" />
      <configuration PROFILE_NAME="Debug-Linux64" ENABLED="true" GENERATION_DIR="build/cross/linux64/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Linux64-musl.cmake&quot; -DBE_DISABLE_OPENGL=ON" />
      <configuration PROFILE_NAME="Release-Linux64" ENABLED="true" GENERATION_DIR="build/cross/linux64/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Linux64-musl.cmake&quot; -DBE_DISABLE_OPENGL=ON" />
      <configuration PROFILE_NAME="Debug-Linux32" ENABLED="true" GENERATION_DIR="build/cross/linux32/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Linux32-musl.cmake&quot; -DBE_DISABLE_OPENGL=ON" />
      <configuration PROFILE_NAME="Release-Linux32" ENABLED="true" GENERATION_DIR="build/cross/linux32/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;~/CLionProjects/CMakeToolchains/Linux32-musl.cmake&quot; -DBE_DISABLE_OPENGL=ON" />
      <configuration PROFILE_NAME="Debug-Serenity64" ENABLED="true" GENERATION_DIR="build/cross/serenity64/debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;/Volumes/Data/serenity/Build/x86_64/CMakeToolchain.txt&quot; -DBE_DISABLE_OPENGL=1" />
      <configuration PROFILE_NAME="Release-Serenity64" ENABLED="true" GENERATION_DIR="build/cross/serenity64/release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_TOOLCHAIN_FILE=&quot;/Volumes/Data/serenity/Build/x86_64/CMakeToolchain.txt&quot; -DBE_DISABLE_OPENGL=1" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="89d20441-8f26-473d-8175-08c4ea0d1359" name="Changes" comment="Added open source license.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dependencies/glfw" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/dependencies/glfw/tests/allocator.c" beforeDir="false" afterPath="$PROJECT_DIR$/dependencies/glfw/tests/allocator.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/ArgumentManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/ArgumentManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/Command.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/Command.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/Console.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/Console.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/Assert.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/Assert.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/StrictMode.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/StrictMode.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Storage/DynamicDictionary.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/BaconEngine/BaconEngine/Storage/DynamicDictionary.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/include/SharedEngineCode/SharedEngineCode/Logger.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/SharedEngineCode/SharedEngineCode/Logger.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/ClientInformation.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/ClientInformation.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Console/ArgumentManager.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Console/ArgumentManager.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Console/Console.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Console/Console.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Console/EngineCommands.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Console/EngineCommands.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/EngineMemory.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/EngineMemory.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/EntryPoint.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/EntryPoint.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/I18N.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/I18N.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGL.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGL.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLRenderer.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLRenderer.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLWindow.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLWindow.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Platform/Windows/Windows.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Platform/Windows/Windows.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Platform/Windows/WindowsWindow.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Platform/Windows/WindowsWindow.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/EngineLayers.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/EngineLayers.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/EngineUIs.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/EngineUIs.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/Layer.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/Layer.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/Renderer.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/Renderer.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/UI.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/UI.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Rendering/Window.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Rendering/Window.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Storage/DynamicArray.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Storage/DynamicArray.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngine/Storage/DynamicDictionary.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngine/Storage/DynamicDictionary.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconEngineLauncher/Main.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconEngineLauncher/Main.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/BaconLauncher/Main.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/BaconLauncher/Main.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/SharedEngineCode/Logger.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/SharedEngineCode/Logger.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/TestGame/Entry.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/TestGame/Entry.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/TestGame/Layers.c" beforeDir="false" afterPath="$PROJECT_DIR$/test/TestGame/Layers.c" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="SCHEME" value="Project" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/dependencies/glfw/src/context.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/BaconEngine/BaconEngine/Console/Console.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/Assert.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/BaconEngine/BaconEngine/Debugging/StrictMode.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/BaconEngine/BaconEngine/Rendering/Renderer.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/SharedEngineCode/SharedEngineCode/Logger.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/include/SharedEngineCode/SharedEngineCode/StringExtension.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Console/Console.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Console/EngineCommands.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Console/EngineCommands.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/EngineMemory.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGL.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLRenderer.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Platform/OpenGL/OpenGLRenderer.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Rendering/Layer.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Rendering/Renderer.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/BaconEngine/Storage/DynamicArray.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/SharedEngineCode/Logger.c" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/source/SharedEngineCode/StringExtension.c" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2F83YY3DW5ZqpFeL9INGq1JXnb7" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/portalplayer/Downloads/BaconEngineC/CMakeLists.txt&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;structure.view.defaults.are.configured&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/source/BaconEngine/Rendering" />
      <recent name="$PROJECT_DIR$/source/BaconEngine/Platform" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.TestGame">
    <configuration name="BaconEditor" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="-c BaconEditor" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="BaconEditor" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="BaconLauncher">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BaconEngine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="BaconEngine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BaconEngineLauncher" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="BaconEngineLauncher" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BaconLauncher" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="--help -ll trace" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="BaconLauncher" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="BaconLauncher">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BaconLauncherUI" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="BaconLauncherUI" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="BaconLauncherUI">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CustomStandaloneClientBinary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="CustomStandaloneClientBinary" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="CustomStandaloneClientBinary">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SharedEngineCode" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="SharedEngineCode" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StandaloneClientBinary" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="StandaloneClientBinary" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="StandaloneClientBinary">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestClientCPP" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="TestClientCPP" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestGame" type="CMakeRunConfiguration" factoryName="Application" PROGRAM_PARAMS="-c ./TestGame" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="TestGame" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="BaconEngine" RUN_TARGET_NAME="BaconLauncher">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="glad" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="glfw" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="glfw" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="update_mappings" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="BaconEngine" TARGET_NAME="update_mappings" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.glad" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.glfw" />
      <item itemvalue="CMake Application.update_mappings" />
      <item itemvalue="CMake Application.BaconEditor" />
      <item itemvalue="CMake Application.BaconEngine" />
      <item itemvalue="CMake Application.BaconEngineLauncher" />
      <item itemvalue="CMake Application.BaconLauncher" />
      <item itemvalue="CMake Application.BaconLauncherUI" />
      <item itemvalue="CMake Application.SharedEngineCode" />
      <item itemvalue="CMake Application.CustomStandaloneClientBinary" />
      <item itemvalue="CMake Application.StandaloneClientBinary" />
      <item itemvalue="CMake Application.TestClientCPP" />
      <item itemvalue="CMake Application.TestGame" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="89d20441-8f26-473d-8175-08c4ea0d1359" name="Changes" comment="" />
      <created>1663859949104</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663859949104</updated>
      <workItem from="1663859997057" duration="81000" />
      <workItem from="1663861147126" duration="16000" />
      <workItem from="1663882971001" duration="5741000" />
      <workItem from="1663964692424" duration="8000" />
      <workItem from="1663966018363" duration="5000" />
      <workItem from="1665201499552" duration="10552000" />
      <workItem from="1665250598362" duration="240000" />
      <workItem from="1665251181836" duration="8377000" />
      <workItem from="1665313765677" duration="4058000" />
      <workItem from="1665331823487" duration="1340000" />
      <workItem from="1665333615941" duration="7374000" />
      <workItem from="1665342833725" duration="9113000" />
      <workItem from="1665537147449" duration="1024000" />
      <workItem from="1665545771657" duration="139000" />
      <workItem from="1665546057876" duration="5459000" />
      <workItem from="1665691830141" duration="310000" />
      <workItem from="1665701936501" duration="67000" />
      <workItem from="1665703035355" duration="3864000" />
      <workItem from="1665720773727" duration="5000" />
      <workItem from="1665721753664" duration="2423000" />
      <workItem from="1665778088712" duration="4064000" />
      <workItem from="1665782890971" duration="50000" />
      <workItem from="1665782949815" duration="2243000" />
      <workItem from="1665825920198" duration="34599000" />
    </task>
    <task id="LOCAL-00001" summary="Updated rendering system to add more potential renderers&#10;Allowed the user to specify what renderer they want to use.&#10;Replace the flawed SEC_ArgumentHandler_GetValueWithShort with SEC_ArgumentHandler_GetInfoWithShort.&#10;SEC_ArgumentHandler_ContainsArgumentOrShort should be used instead of SEC_ArgumentHandler_GetInfoWithShort, if you only want to check if the argument exists.&#10;Added support assert macros, makes it easier to convey what the assert is there for. (I.E. telling that a function is not implemented, or that a branch should never have been reached)&#10;Allow the user to check what version the launcher/engine is at.&#10;Changed global variable names to try preventing name collisions.&#10;Change the output path for each binary to fit the structure that best fits the engine.&#10;Started stripping non-debug builds.&#10;Made some initializers/destroyers private.&#10;Created a DeltaTime header. This will allow people to get the delta time anywhere, even inside of events.&#10;Added invalid size check for DynamicArray.&#10;Fixed some functions not following the naming scheme.&#10;Started work on the help command.&#10;Replaced some C style struct initializations with SEC_CPP_SUPPORT_CREATE_STRUCT, which switches to the C++ style if using a C++ compiler. Happy now, MSVC?&#10;Removed some useless includes.&#10;Commented out BE_I18N_Translate. Find solution that doesn't use getline.&#10;Removed CppSupport header includes inside of source files. Their header files already include them, so there's no point in doing it again.&#10;Merged the software argument into the renderer argument.&#10;Stopped calling OnStop on layers that haven't initialized yet.&#10;Made the layer OnUpdate and OnEvent functions private. It would be a bad idea for the client to call them, especially inside an update/event function.&#10;Allow you to remove the new-line from the logger.&#10;Added Windows software rendering.&#10;Renamed SpecificRendererFunctions to SpecificPlatformFunctions.">
      <created>1665837478374</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1665837478374</updated>
    </task>
    <task id="LOCAL-00002" summary="Fixed and optimized Assert/Strict Mode check.&#10;Started on attempting to parse command arguments.&#10;Fixed some values not being pre-initialized.&#10;Moved console register and duplicate outside of console, and inside the command header. This allows us to avoid including many potentially unneeded functions.&#10;Removed stray new-line inside the signal handler.">
      <created>1665867152651</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1665867152651</updated>
    </task>
    <task id="LOCAL-00003" summary="Removed test line, oops.">
      <created>1665867873451</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1665867873451</updated>
    </task>
    <task id="LOCAL-00004" summary="Added open source license.">
      <created>1665869026849</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1665869026849</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Updated rendering system to add more potential renderers&#10;Allowed the user to specify what renderer they want to use.&#10;Replace the flawed SEC_ArgumentHandler_GetValueWithShort with SEC_ArgumentHandler_GetInfoWithShort.&#10;SEC_ArgumentHandler_ContainsArgumentOrShort should be used instead of SEC_ArgumentHandler_GetInfoWithShort, if you only want to check if the argument exists.&#10;Added support assert macros, makes it easier to convey what the assert is there for. (I.E. telling that a function is not implemented, or that a branch should never have been reached)&#10;Allow the user to check what version the launcher/engine is at.&#10;Changed global variable names to try preventing name collisions.&#10;Change the output path for each binary to fit the structure that best fits the engine.&#10;Started stripping non-debug builds.&#10;Made some initializers/destroyers private.&#10;Created a DeltaTime header. This will allow people to get the delta time anywhere, even inside of events.&#10;Added invalid size check for DynamicArray.&#10;Fixed some functions not following the naming scheme.&#10;Started work on the help command." />
    <MESSAGE value="Updated rendering system to add more potential renderers&#10;Allowed the user to specify what renderer they want to use.&#10;Replace the flawed SEC_ArgumentHandler_GetValueWithShort with SEC_ArgumentHandler_GetInfoWithShort.&#10;SEC_ArgumentHandler_ContainsArgumentOrShort should be used instead of SEC_ArgumentHandler_GetInfoWithShort, if you only want to check if the argument exists.&#10;Added support assert macros, makes it easier to convey what the assert is there for. (I.E. telling that a function is not implemented, or that a branch should never have been reached)&#10;Allow the user to check what version the launcher/engine is at.&#10;Changed global variable names to try preventing name collisions.&#10;Change the output path for each binary to fit the structure that best fits the engine.&#10;Started stripping non-debug builds.&#10;Made some initializers/destroyers private.&#10;Created a DeltaTime header. This will allow people to get the delta time anywhere, even inside of events.&#10;Added invalid size check for DynamicArray.&#10;Fixed some functions not following the naming scheme.&#10;Started work on the help command.&#10;Replaced some C style struct initializations with SEC_CPP_SUPPORT_CREATE_STRUCT, which switches to the C++ style if using a C++ compiler. Happy now, MSVC?&#10;Removed some useless includes.&#10;Commented out BE_I18N_Translate. Find solution that doesn't use getline.&#10;Removed CppSupport header includes inside of source files. Their header files already include them, so there's no point in doing it again.&#10;Merged the software argument into the renderer argument.&#10;Stopped calling OnStop on layers that haven't initialized yet.&#10;Made the layer OnUpdate and OnEvent functions private. It would be a bad idea for the client to call them, especially inside an update/event function.&#10;Allow you to remove the new-line from the logger.&#10;Added Windows software rendering.&#10;Renamed SpecificRendererFunctions to SpecificPlatformFunctions." />
    <MESSAGE value="Fixed and optimized Assert/Strict Mode check.&#10;Started on attempting to parse command arguments.&#10;Fixed some values not being pre-initialized.&#10;Moved console register and duplicate outside of console, and inside the command header. This allows us to avoid including many potentially unneeded functions.&#10;Removed stray new-line inside the signal handler." />
    <MESSAGE value="Removed test line, oops." />
    <MESSAGE value="Added open source license." />
    <option name="LAST_COMMIT_MESSAGE" value="Added open source license." />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>